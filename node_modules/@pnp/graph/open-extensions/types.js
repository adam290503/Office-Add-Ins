import { __decorate } from "tslib";
import { body } from "@pnp/queryable";
import { _GraphCollection, graphInvokableFactory, graphPatch, graphPost } from "../graphqueryable.js";
import { getById, deleteable, defaultPath } from "../decorators.js";
/**
 * Open Extension
 */
let _OpenExtension = class _OpenExtension extends _GraphCollection {
    update(extension) {
        return graphPatch(this, body(extension));
    }
};
_OpenExtension = __decorate([
    deleteable()
], _OpenExtension);
export { _OpenExtension };
export const OpenExtension = graphInvokableFactory(_OpenExtension);
/**
 * Open Extensions
 */
let _OpenExtensions = class _OpenExtensions extends _GraphCollection {
    create(extension) {
        if (extension.extensionName.length > 30) {
            throw Error("Extension id length should be less than or equal to 30 characters.");
        }
        return graphPost(this, body(extension));
    }
};
_OpenExtensions = __decorate([
    defaultPath("extensions"),
    getById(OpenExtension)
], _OpenExtensions);
export { _OpenExtensions };
export const OpenExtensions = graphInvokableFactory(_OpenExtensions);
//# sourceMappingURL=types.js.map